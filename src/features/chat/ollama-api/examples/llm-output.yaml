
interface:
  name: ClassifyEmails
  class: predict
  method: categorize_email_content
  goal: Predict if an email is spam using its content and metadata.
  inputs:
    - raw_emails: List of strings containing the full text of each email's body (without headers or footers)
  outputs:
    - predictions: Dictionary mapping from 'email_id' to either "spam" or "not_spam"

steps:
  - name: ExtractMetadata
    class: parse
    method: extract_metadata
    goal: Parse metadata for each email.
    inputs:
      - raw_emails: List of strings containing the full text of each email's body (without headers or footers)
    outputs:
      - parsed_data: Dictionary mapping from 'email_id' to extracted metadata

  - name: CleanTextData
    class: clean
    method: remove_html_tags, lower_case_text
    goal: Remove HTML tags and convert all text to lowercase.
    inputs:
      - raw_emails: List of strings containing the full text of each email's body (without headers or footers)
    outputs:
      - cleaned_data: List of strings with removed HTML tags converted to lowercase

  - name: VectorizeData
    class: transform
    method: vectorization_of_text_content, calculate_tfidf_scores
    goal: Transform raw text into TF-IDF vectors.
    inputs:
      - parsed_metadata: Dictionary mapping from 'email_id' to extracted metadata (from previous step)
      - cleaned_data: List of strings with removed HTML tags converted to lowercase (from previous step)
    outputs:
      - tfidf_vectors: Tensors containing the vectorized representation and TF-IDF scores for each email

  - name: LoadSpamClassifier
    class: io
    method: load_spam_classifier_model, get_trained_spam_classifier
    goal: Retrieve a pre-trained spam classification model.
    inputs:
      None required as this step uses static data/model loading functions only.
    outputs:
      - trained_spam_classifier: Pre-loaded and ready-to-use machine learning classifier for detecting spam.

  - name: PredictSpamLabels
    class: predict
    method: classify_emails, use_trained_model_to_predict_labels_on_data_vectors
    goal: Classify emails into "spam" or "not_spam".
    inputs:
      - tfidf_vectors: Tensors containing the vectorized representation and TF-IDF scores for each email (from previous step)
      - trained_spam_classifier: Pre-loaded spam classification model to predict labels.
    outputs:
      - predictions: Dictionary mapping from 'email_id' to either "spam" or "not_spam"

  - name: ValidateOutput
    class: validate
    method: check_predictions_validity, verify_output_structure_matches_interface_specification
    goal: Ensure that the final output matches interface specifications.
    inputs:
      - predictions: Dictionary mapping from 'email_id' to either "spam" or "not_spam"
      - parsed_metadata: List of extracted metadata (from previous step) for validation against expected outputs. This is not an actual input but a necessary check, as we don't have this information in our current context.
    outputs:
      None required; the final output 'predictions' should already be validated by reaching here.

